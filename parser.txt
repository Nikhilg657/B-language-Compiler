%{
    #include <stdio.h>
    #include<math.h>
    int yylex(void);
    void yyerror(char *);
    extern FILE * yyin;
    extern FILE * yyout;
    int sym[26];
%}
%token DEF FN DIM MSS END FOR GOSUB GOTO IF THEN LET INPUT PRINT NEXT TO STEP REM RETURN STOP
%token  INTEGER
%token DATA
%token COMMA
%token FLOAT
%token  STRING
%token NORVAR SINGLEVAR DOUBLEVAR STRVAR
%left '+' '-'
%left '*' '/'
%start program

%%
program : line {printf("in program\n");}
        | program line
        ;

line    : number statement {printf("in line\n");};
number  : INTEGER;
statement: data|dim|end|fo|next|gosub|got|iff|then|let|input|print|stop|rem|returnn {printf("in statement\n");};
data: DATA data_list {printf("in DATA\n");};
data_list:
    data_item {printf("in SINGLE DATA\n");}
    | data_list ',' data_item {printf("in DATA LIST MULTIPLE\n");}
    ;

data_item:
    INTEGER {printf("in INTEGER\n");}
    |STRING {printf("in STRING\n");}
    ;

// def: DEF FN '=' expr {printf("in def");}
//       |DEF FN '('MSS')''=' expr {printf("in def_par\n");}
// ;
// expr: expr '+' term {$$=$1+$3;}
//     | expr '-' term {$$=$1-$3;}
//     | term {$$=$1;}
    
// term: term '*' factor {$$=$1*$3;}
//     | term '/' factor {$$=$1/$3;}
//     | factor {$$=$1;}
    
// factor:'~' factor {$$=-$2;}
//         | '~' exp {$$=-$2;}
//         | exp {$$=$1;}
        
// exp: exp2 '^' exp {$$=pow($1,$3);}
//     | exp2 {$$=$1;}
    
// exp2: '(' expr ')' {$$=($2);}
//     | number {$$=$1;}
//     |MSS {$$=$1;}
//     |DOUBLEVAR {$$=$1;}
//     |SINGLEVAR {$$=$1;}
//     ;
dim: DIM MSS{printf("in dim");};

gosub: GOSUB {printf("in end");};
returnn: RETURN {printf("in for");};
next: NEXT {printf("in dim");};
end: END {printf("in dim");};
iff: IF {printf("in dim");};
stop: STOP {printf("in dim");};
let: LET {printf("in dim");};
then: THEN {printf("in dim");};
print: PRINT {printf("in dim");};
fo: FOR {printf("in dim");};
input: INPUT {printf("in dim");};
got: GOTO {printf("in dim");};
rem: REM {printf("in dim");};
%%


void yyerror(char *s) {
    fprintf(stderr, "%s\n", s);
}

int main(void)
{
    // yyin=fopen("input.txt","r");
    // yyout=fopen("output.txt","w");
    yyparse();
    // fclose(yyin);
    // fclose(yyout);
    return 0;
}
